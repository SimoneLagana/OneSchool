<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <%= stylesheet_link_tag "staff_manage.css" %>
    <%= javascript_include_tag('staff.js') %>
    <title>Document</title>
</head>

<body>

    <nav class="navbar">
<%= link_to school_staff_home_path(CF: params[:CF]),class: 'link-profile no-underline' do%>
        <div class="writ">
          OneSchool
        </div>
<%end%>
        <%= link_to school_staff_profile_url(CF: params[:CF]),class: 'link-profile no-underline' do %>
            <div class="profile">
                Profile
            </div>
        <% end %>
      </nav>
    <div class="home">
        <div class="upper-bottons">
            <div class="up-botton" id="first-botton" onclick="show_panel('first-panel');">
                Manage
            </div>
            <div class="up-botton" id="second-botton" onclick="show_panel('second-panel'); console.log('secondo pannello')">
                Insert
            </div>
        </div> 
        <div class="main-panel">
            <div class="panel" id="first-panel" style="display:flex;">
      <div id="popupContainer"></div>

                <!-- barra di ricerca con bootstrap
                <div class="input-group">
                    <div class="form-outline">
                      <input type="search" id="form1" class="form-control" />
                      <label class="form-label" for="form1">Search</label>
                    </div>
                    <button type="button" class="btn btn-primary">
                      <i class="fas fa-search"></i>
                    </button>
                  </div>
                barra di ricerca con rails (poi vediamo quale usare)
                <%= form_with url: "/search", method: :get do |form| %>
                    <%= form.label :query, "Search for:" %>
                    <%= form.text_field :query %>
                    <%= form.submit "Search" %>
                <% end %> -->
                <div class="upper-part">

                    <div class="search-bar">
                        Select role
                    </div>
                    <div class="select-bar">
            <%= form_tag school_staff_manage_path, class: 'form-subject', method: :get do %>
            
            <%= select_tag :account, options_for_select([["Roles", nil]] + @type.reject { |t| t == "SchoolStaff" }, @typeName), class: "form-field", onchange: "this.form.submit()"%>

            <script>
            document.addEventListener("DOMContentLoaded", function() {
              var select = document.querySelector("select[name='account']");
              select.addEventListener("change", function() {
                if (select.value !== "") {
                  var options = select.querySelectorAll("option");
                  for (var i = 0; i < options.length; i++) {
                    if (options[i].value === "") {
                      options[i].style.display = "none";
                    }
                  }
                }
              });
            });

            </script>

            <%= hidden_field_tag :CF, @staff.CF %>
            <%= hidden_field_tag :type, @tipi %>
            <%= hidden_field_tag :class, @classi %>
            
            <% end %>


            </div>
                </div>
                <div id="manageAdminTableDiv">
                <table class="tabella">
                <thead>
      <tr>
      <th>Name</th>
      <th>Surname</th>
      <th>Email</th>
      <th colspan="3"></th>
    </tr>
    <tbody>
    <% if @typeName == "Student"%>
    <% @students.each do |student|%>
<tr>
        <td class= "center"><%= student.name %></td>
        <td class= "center"><%= student.surname %></td>
        <td class= "center"><%= student.mail %></td>
        <% 
            classes = ClassRoom.where(school_code: student.school_code).pluck(:class_code).uniq
        %>
        <td><button onclick="editStudentForm(<%= json_string= student.to_json %>, <%= json_string= classes.to_json%>, <%= params[:CF].to_json %>);">Edit</button></td>           
        <td> <%= form_tag school_staff_delete_path, method: :delete do %>
            <%= hidden_field_tag :type1, "Student" %>
            <%= hidden_field_tag :CF1, student.CF %>
             <%= hidden_field_tag :CF, @staff.CF %>

<%= submit_tag 'Delete', class: 'deleteButton' %>
            <% end %>
        </td>
    <% end %>
        <% elsif @typeName == "Teacher"%>
    <% @teachers.each do |teacher|%>
<tr>
        <td class="center"><%= teacher.name %></td>
        <td class= "center"><%= teacher.surname %></td>
        <td class="center"><%= teacher.mail %></td>
        <td><button onclick="editUserForm(<%= json_string= teacher.to_json %>, <%= params[:CF].to_json %> );">Edit</button></td>           
        <td> <%= form_tag school_staff_delete_path, method: :delete do %>
            <%= hidden_field_tag :CF, @staff.CF %>
            <%= hidden_field_tag :type1, "Teacher" %>
            <%= hidden_field_tag :CF1, teacher.CF %>
            <%= submit_tag 'Delete', class: 'deleteButton' %>
            <% end %>
        </td>
        <% end %>
    <% elsif @typeName == "Family" %>
    <% @families.each do |family|%>
<tr>
        <td class= "center"><%= family.name %></td>
        <td class= "center"><%= family.surname %></td>
        <td class= "center"><%= family.mail %></td>
        <td><button onclick="editUserForm(<%= json_string= family.to_json %>);">Edit</button></td>           
        <td> <%= form_tag school_staff_delete_path, method: :delete do %>
            <%= hidden_field_tag :type1, "Family" %>
            <%= hidden_field_tag :CF1, family.CF %>
            <%= hidden_field_tag :CF, @staff.CF %>
            <%= submit_tag 'Delete', class: 'deleteButton' %>
            <% end %>
        </td>
        <% end %>
<%# <%= link_to 'Delete', admin_deleteSchool_path(code: "school.code"), method: :delete,
  form: {data: {turbo_confirm: 'Are you sure?'}} %>
     <%end%>
    </tbody>
                </thead>
                </table>
                </div>
                </div>
            
            
            <div class="panel" id="second-panel" style="display:none;">
                <div class="form-container">
                    Insert type of user
             
<%= form_tag school_staff_manage_path, class: 'form-subject', method: :get do %>
  
  <%= select_tag :type, options_for_select([["Select type", nil]] + @tipi.reject { |t| t == "SchoolStaff" }), class: "form-field" %><br>
  <div id="class-field" style="display:none;">
    <%= select_tag :class, options_for_select(@classi), class: "form-field" %><br>
  </div>
  <%= hidden_field_tag :CF, @staff.CF %>
  
<% end %>
<% puts @typo%>
<%= form_tag school_staff_insert_path(CF: params[:CF]), method: :post, id: "insert-form" do %>
  <div id="common-fields" style="display:none;">
    <%= label_tag :name, "Name" %><br>
    <%= text_field_tag :name, nil, placeholder: "Enter name" %><br>

    <%= label_tag :surname, "Surname" %><br>
    <%= text_field_tag :surname, nil, placeholder: "Enter surname" %><br>

    <%= label_tag :CFis, "CF" %><br>
    <%= text_field_tag :CFis, nil, placeholder: "Enter CF" %><br>

    <%= label_tag :mail, "Mail" %><br>
    <%= email_field_tag :mail, nil, placeholder: "Enter mail" %><br>

    <%= label_tag :password, "Password" %><br>
    <%= password_field_tag :password, nil, placeholder: "Enter password" %><br>
  </div>

  <div id="student-fields" style="display:none;">
    <%= label_tag :birthdate, "Birthdate" %><br>
    <%= date_field_tag :birthdate %><br>
  </div>

  <div id="family-fields" style="display:none;">
    <%= label_tag :family_CF, "Family CF" %><br>
    <%= text_field_tag :family_CF, nil, placeholder: "Enter family CF" %><br>
  </div>

  <%= submit_tag "Submit", id: "submit-button", style: "display:none;"%>



  <script>
  const typeSelect = document.querySelector("select[name='type']");
  const classSelect = document.querySelector("select[name='class']");
  const classField = document.querySelector("#class-field");
  const commonFields = document.querySelector("#common-fields");
  const studentFields = document.querySelector("#student-fields");
  const familyFields = document.querySelector("#family-fields");
  const submitButton = document.querySelector("#submit-button");

    typeSelect.addEventListener("change", function() {
    commonFields.style.display = "block";
    submitButton.style.display = "block";
    console.log("ciao");
    
    checkValue = 0
    if (this.value === "Student") {
      checkValue = 1
      classField.style.display = "block";
      studentFields.style.display = "block";
      familyFields.style.display = "none";
 
      fetch("<%= school_staff_manage_path %>?" + new URLSearchParams({
        type: this.value,
        CF: "<%= @staff.CF %>",
        account: "<%= @typeName %> ",
        
      }), {
        headers: {
          'X-Requested-With': 'XMLHttpRequest'
        }
      }).then(function(response) {
        return response.text();
      }).then(function(html) {

        const newClassSelect = new DOMParser().parseFromString(html, 'text/html').querySelector("select[name='class']");
        classSelect.innerHTML = newClassSelect.innerHTML;
      });
    } else if (this.value === "Family") {
      checkValue = 1
      classField.style.display = "none";
      studentFields.style.display = "none";
      familyFields.style.display = "block";

      
      fetch("<%= school_staff_manage_path %>?" + new URLSearchParams({
        type: this.value,
        CF: "<%= @staff.CF %>",
        account: "<%= @typeName %> ",
        
      }), {
        headers: {
          'X-Requested-With': 'XMLHttpRequest'
        }
      });
    } else if (this.value === "Teacher") {
      checkValue = 1
      classField.style.display = "none";
      studentFields.style.display = "none";
      familyFields.style.display = "none";

      
      fetch("<%= school_staff_manage_path %>?" + new URLSearchParams({
        type: this.value,
        CF: "<%= @staff.CF %>",
        account: "<%= @typeName %> ",
        
      }), {
        headers: {
          'X-Requested-With': 'XMLHttpRequest'
        }
      });
    } else {
      checkValue = 1
      classField.style.display = "none";
      studentFields.style.display = "none";
      familyFields.style.display = "none";
    }
    if (checkValue == 1) {
      this.querySelector("option[value='']").remove();
    }
  });

  
  classSelect.addEventListener("change", function() {
    if (typeSelect.value === "Student") {
      fetch("<%= school_staff_manage_path %>?" + new URLSearchParams({
        type: typeSelect.value,
        classroom: this.value,
        CF: "<%= @staff.CF %>",
        account: "<%= @typeName %> ",
        
      }), {
        headers: {
          'X-Requested-With': 'XMLHttpRequest'
        }
      });
    }
  });


  </script>
<% end %>


                        
                 
                    
            
                </div>
            </div>

        </div>
    </div> 

    
</body>
</html>